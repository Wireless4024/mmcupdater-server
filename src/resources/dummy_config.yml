# [WIP]
# Config for http service
http:
  # Accept client from anywhere? leave it to false if you want to reverse-proxy to this service
  # false: only listen on localhost
  # type: boolean
  expose: false
  
  # Http listen port
  # type: uint16
  port: 8181
  
  # Listen via unix socket (linux only)
  # type: string
  socket: ''
  
  # Enable http/2 and ssl
  # type: boolean
  secure: false
  
  # [Optional]: only need when `http.secure` is true
  # certificate file (full-chain)
  # type: string
  cert_file: ''
  
  # [Optional]: only need when `http.secure` is true
  # certificate key (private key)
  # type: string
  cert_key: ''
  
  jwt:
    # Jwt encoding algorithm
    # Possible values:
    # "HS256", "HS384", "HS512", 
    # "ES256", "ES384", 
    # "RS256", "RS384", "RS512",
    # "PS256", "PS384", "PS512", 
    # "EdDSA"
    # Note: ensure key type is match!
    # type: enum
    algo: 'RS256'
    # Path to private key
    # type: string
    enc_key: ''
    # Path to public key
    # type: string
    dec_key: ''
    # Valid time for jwt token
    # type: number
    valid_time: 10080
  cors:    
    # List of allowed method send by cors header
    # type: [string]
    methods: 
      - GET
      - POST
      - HEAD
      - OPTION
    # List of allowed origin send by cors header
    # type: [string]
    origins: []

# [WIP]
# Config for monitoring service
monitor:
  # Config related to prometheus
  prometheus:
    # Enable prometheus exporter
    # type: boolean
    enable: false

# [WIP]
security:
  # Max amount of wrong password; -1 is infinity
  # type: int32
  max_login_retry: 15
  # Number of minutes until retry timeout reset; -1 for manual reset
  # type: uint64
  login_cool_down: 30